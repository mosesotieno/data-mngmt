# Data Cleaning

## Introduction

Data cleaning is a vital step in data analysis, ensuring accuracy and consistency in your dataset. While there isn't a one-size-fits-all template, each dataset presents unique challenges that require context-specific solutions. A thorough understanding of the study design is key to effective data cleaning. For instance, cross-sectional studies should have unique participant records, whereas longitudinal studies involve repeated measures.

Another crucial detail is the **unit of analysis**. For example, in datasets involving households and their members, it's essential to understand how households and participants are uniquely identified to ensure accurate data handling.

### Primary Key

A **primary key** is a unique identifier for each record in a dataset, ensuring that no two rows are identical. It is crucial for maintaining data integrity, especially when dealing with relational databases or complex datasets. The primary key allows you to retrieve, update, or relate specific records without ambiguity.

In a dataset involving households and members, for example:

-   **Household ID** might be the primary key for identifying households.

-   **Member ID** (within a household) could serve as a secondary key to uniquely identify individuals in relation to the household.

The primary key is essential for linking related tables (e.g., household and member tables) and avoiding data duplication or inconsistencies. The study design should have a mechanism of uniquely identifying the records in a dataset.

### Survey Solutions Primary Key

In **Survey Solutions**, linking the main questionnaire dataset with roster datasets is done through two key variables:

1.  **interview_key**: This is a user-friendly identifier used to uniquely reference interviews. It can be helpful when referencing or reviewing specific interviews during data collection or management.

2.  **interview_id**: This is a unique identifier generated by the system for each interview. It serves as a reliable key to link datasets, including the main questionnaire and any associated rosters, ensuring consistency and accuracy when combining data across various sections of the study.

These variables play a critical role in maintaining the integrity of data across the different components of the survey.

## Common Data Cleaning Process

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

```{r}
library(tidyverse)
library(janitor)
library(haven)
```

### Cleaning Column Names

```{r}
sstraining_main <- read_rds("data/ssolutions_training_main.rds")



sstraining_main <- sstraining_main |> 
  clean_names()


members <- read_rds("data/membre.rds")

members <- members |> 
  clean_names()
```

### Check Duplicates

```{r}
dups_ssmain <- sstraining_main |> 
  get_dupes(idhh)
```

### Handle Missing Values

```{r}
library(naniar) 
generate_missing_report <- function(data) {
  missing_report <- miss_var_summary(data, order = TRUE,
                                     add_cumsum = TRUE)  |> 
    filter(n_miss != 0) %>%
    dplyr::select(variable, pct_miss, n_miss)  |> 
    mutate(pct_miss = round(pct_miss, 1)) |> 
    filter(pct_miss > 0) |> 
    rename(percentage_missing = pct_miss)
  
  missing_report
  
}


generate_missing_report(sstraining_main)

sstraining_main <- sstraining_main |> 
  remove_empty(which = c("rows", "cols"))



```

### Type Casting

This process involves transforming data from one type to another, such as converting a string to a number, or an integer to a floating-point number, depending on the requirements of the operation.

```{r}

sstraining_main <- sstraining_main |> 
  mutate(across(where(is.labelled), as_factor))


```

I usually convert labeled types to factors which are useful in further analysis.

### Labeling Variables

One of the significant advantages of using **Survey Solutions** is the ability to label variables at the time of questionnaire design. This feature ensures that each variable in your survey is clearly identified with a meaningful label, which simplifies data management and analysis later on.

However you may want to manually label the variables.

```{r}
attr(sstraining_main[['qa03']], 'label') <- "Pay non-family members to work on your fields"

write_rds(sstraining_main, "data/sstraining_main_clean.rds")
```

## Summary

Data cleaning is inherently context-specific, meaning there is no universal template that fits all scenarios. To effectively clean your data, it is essential to thoroughly understand the study design, objectives, and other relevant factors. This knowledge allows for a tailored approach that addresses the unique requirements of the dataset and the goals of the analysis.

To master R, I recommend **R for Data Science**[@wickhamhadley2023]. This book introduces the tidyverse and focuses on data manipulation, visualization, and analysis through practical examples and exercises. Its clear explanations and structured approach make it suitable for both beginners and those looking to enhance their skills. Whether you're starting out or aiming to deepen your expertise, this book is a reliable guide for your data science journey
