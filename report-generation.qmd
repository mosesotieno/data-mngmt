# Report Generation

## Introduction

The ultimate objective of any data preprocessing effort is to generate useful data output. Whether it's calculating summary statistics of key variables, tracking data collection progress, building dashboards with actionable insights, developing complex models, or creating other data products, reporting is essential to communicate findings effectively.

Generating real-time progress reports during data collection is especially important. This allows you to catch potential issues early on, such as:

-   Missed skip logic

-   Incorrect validation rules

-   Other data-related inconsistencies

These insights enable immediate corrective actions, ensuring data integrity throughout the collection process.

The great news is that report generation can be integrated seamlessly into your data management pipeline! Additionally, before diving into serious analysis, it's crucial to perform Exploratory Data Analysis (EDA) to thoroughly check your data. EDA helps you understand the structure, detect anomalies, and identify patterns that could impact your analysis. It ensures that your dataset is clean, reliable, and ready for deeper insights. I will provide a very basic EDA on our dataset.

```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, ft.align = "left")
options(gtsummary.tbl_summary.percent_fun = 
          function(x) sprintf(x * 100, fmt='%#.1f'))
```

## Code to Generate Report

```{r}
library(tidyverse)
library(gtsummary)
library(flextable)


```

```{r}
sstraining_main <- read_rds("data/sstraining_main_clean.rds")
members <- read_rds("data/membre.rds")
```

So far we have visited `r nrow(sstraining_main)` households and captured information on `r nrow(members)` members of the households. Below is a summary of household information:

### Household Information

The variables here start with *qs* or *qm*

```{r}

sstraining_main |> 
  select(starts_with(c("qs", "qm"))) |> 
  select(where(is.factor) | where(is.factor)) |> 
  select(1:5) |> 
  tbl_summary(type = list(
                where(is.factor) ~ "categorical",
                where(is.numeric) ~ "continuous"), missing_text =  "Missing") |> 
  bold_labels() |> 
  modify_header(label = "**Variable**") |> 
  modify_footnote(everything() ~ NA) |> 
  gtsummary::as_flex_table() |>
  theme_box() |> 
  align(i = 1, align = "center", part = "header") |> 
  flextable::font(fontname = "Calibri", part = "all") |> 
  flextable::padding(padding = 1, part = "all") |> 
  bold(part = "header") |> 
  bg(bg = "gray", part = "header")
```

### Agriculture

The variables here start with *qa* and *qd.*

```{r}

sstraining_main |> 
  select(starts_with(c("qa", "qd"))) |> 
  select(where(is.factor) | where(is.factor)) |> 
  select(1:5) |> 
  tbl_summary(type = list(
                where(is.factor) ~ "categorical",
                where(is.numeric) ~ "continuous"), missing_text =  "Missing") |> 
  bold_labels() |> 
  modify_header(label = "**Variable**") |> 
  modify_footnote(everything() ~ NA) |> 
  gtsummary::as_flex_table() |>
  theme_box() |> 
  align(i = 1, align = "center", part = "header") |> 
  flextable::font(fontname = "Calibri", part = "all") |> 
  flextable::padding(padding = 1, part = "all") |> 
  bold(part = "header") |> 
  bg(bg = "gray", part = "header")
```

::: callout-note
You can continue with other sections as required.
:::

### Summary

Run your report on cleaned or partially cleaned data, tailoring the content to the needs of your audience. Review the distribution of key variables, and don't overlook free text fields, as they can provide valuable insights for categorical variables.
